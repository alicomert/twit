"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Extractors = void 0;
const Data_1 = require("../enums/Data");
const CursoredData_1 = require("../models/data/CursoredData");
const Tweet_1 = require("../models/data/Tweet");
const User_1 = require("../models/data/User");
/**
 * Collection of data extractors for each resource.
 *
 * @internal
 */
exports.Extractors = {
    /* eslint-disable @typescript-eslint/naming-convention */
    LIST_MEMBERS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.USER),
    LIST_TWEETS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    MEDIA_UPLOAD_APPEND: () => undefined,
    MEDIA_UPLOAD_FINALIZE: () => undefined,
    MEDIA_UPLOAD_INITIALIZE: (response) => response.media_id_string ?? undefined,
    TWEET_DETAILS: (response, id) => Tweet_1.Tweet.single(response, id),
    TWEET_DETAILS_ALT: (response, id) => Tweet_1.Tweet.single(response, id),
    TWEET_DETAILS_BULK: (response, ids) => Tweet_1.Tweet.multiple(response, ids),
    TWEET_LIKE: (response) => (response?.data?.favorite_tweet ? true : false),
    TWEET_LIKERS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.USER),
    TWEET_POST: (response) => response?.data?.create_tweet?.tweet_results?.result?.rest_id ?? undefined,
    TWEET_REPLIES: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    TWEET_RETWEET: (response) => (response?.data?.create_retweet ? true : false),
    TWEET_RETWEETERS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.USER),
    TWEET_SCHEDULE: (response) => response?.data?.tweet?.rest_id ?? undefined,
    TWEET_SEARCH: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    TWEET_UNLIKE: (response) => (response?.data?.unfavorite_tweet ? true : false),
    TWEET_UNPOST: (response) => (response?.data?.delete_tweet ? true : false),
    TWEET_UNRETWEET: (response) => response?.data?.unretweet?.source_tweet_results?.result ? true : false,
    TWEET_UNSCHEDULE: (response) => response?.data?.scheduledtweet_delete == 'Done',
    USER_AFFILIATES: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.USER),
    USER_BOOKMARKS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    USER_DETAILS_BY_USERNAME: (response) => User_1.User.single(response),
    USER_DETAILS_BY_ID: (response) => User_1.User.single(response),
    USER_DETAILS_BY_IDS_BULK: (response, ids) => User_1.User.multiple(response, ids),
    USER_FEED_FOLLOWED: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    USER_FEED_RECOMMENDED: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    USER_FOLLOW: (response) => (response?.id ? true : false),
    USER_FOLLOWING: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.USER),
    USER_FOLLOWERS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.USER),
    USER_HIGHLIGHTS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    USER_LIKES: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    USER_MEDIA: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    USER_NOTIFICATIONS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.NOTIFICATION),
    USER_SUBSCRIPTIONS: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.USER),
    USER_TIMELINE: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    USER_TIMELINE_AND_REPLIES: (response) => new CursoredData_1.CursoredData(response, Data_1.BaseType.TWEET),
    USER_UNFOLLOW: (response) => (response?.id ? true : false),
    /* eslint-enable @typescript-eslint/naming-convention */
};
//# sourceMappingURL=Extractors.js.map