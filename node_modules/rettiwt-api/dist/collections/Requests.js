"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Requests = void 0;
const List_1 = require("../requests/List");
const Media_1 = require("../requests/Media");
const Tweet_1 = require("../requests/Tweet");
const User_1 = require("../requests/User");
const Tweet_2 = require("./Tweet");
/**
 * Collection of requests to various resources.
 *
 * @internal
 */
exports.Requests = {
    /* eslint-disable @typescript-eslint/naming-convention */
    LIST_MEMBERS: (args) => List_1.ListRequests.members(args.id, args.count, args.cursor),
    LIST_TWEETS: (args) => List_1.ListRequests.tweets(args.id, args.count, args.cursor),
    MEDIA_UPLOAD_APPEND: (args) => Media_1.MediaRequests.appendUpload(args.upload.id, args.upload.media),
    MEDIA_UPLOAD_FINALIZE: (args) => Media_1.MediaRequests.finalizeUpload(args.upload.id),
    MEDIA_UPLOAD_INITIALIZE: (args) => Media_1.MediaRequests.initializeUpload(args.upload.size),
    TWEET_DETAILS: (args) => Tweet_1.TweetRequests.details(args.id),
    TWEET_DETAILS_ALT: (args) => Tweet_1.TweetRequests.replies(args.id),
    TWEET_DETAILS_BULK: (args) => Tweet_1.TweetRequests.bulkDetails(args.ids),
    TWEET_LIKE: (args) => Tweet_1.TweetRequests.like(args.id),
    TWEET_LIKERS: (args) => Tweet_1.TweetRequests.likers(args.id, args.count, args.cursor),
    TWEET_POST: (args) => Tweet_1.TweetRequests.post(args.tweet),
    TWEET_REPLIES: (args) => Tweet_1.TweetRequests.replies(args.id, args.cursor, args.sortBy ? Tweet_2.TweetRepliesSortTypeMap[args.sortBy] : undefined),
    TWEET_RETWEET: (args) => Tweet_1.TweetRequests.retweet(args.id),
    TWEET_RETWEETERS: (args) => Tweet_1.TweetRequests.retweeters(args.id, args.count, args.cursor),
    TWEET_SCHEDULE: (args) => Tweet_1.TweetRequests.schedule(args.tweet),
    TWEET_SEARCH: (args) => Tweet_1.TweetRequests.search(args.filter, args.count, args.cursor),
    TWEET_UNLIKE: (args) => Tweet_1.TweetRequests.unlike(args.id),
    TWEET_UNPOST: (args) => Tweet_1.TweetRequests.unpost(args.id),
    TWEET_UNRETWEET: (args) => Tweet_1.TweetRequests.unretweet(args.id),
    TWEET_UNSCHEDULE: (args) => Tweet_1.TweetRequests.unschedule(args.id),
    USER_AFFILIATES: (args) => User_1.UserRequests.affiliates(args.id, args.count, args.cursor),
    USER_BOOKMARKS: (args) => User_1.UserRequests.bookmarks(args.count, args.cursor),
    USER_DETAILS_BY_USERNAME: (args) => User_1.UserRequests.detailsByUsername(args.id),
    USER_DETAILS_BY_ID: (args) => User_1.UserRequests.detailsById(args.id),
    USER_DETAILS_BY_IDS_BULK: (args) => User_1.UserRequests.bulkDetailsByIds(args.ids),
    USER_FEED_FOLLOWED: (args) => User_1.UserRequests.followed(args.count, args.cursor),
    USER_FEED_RECOMMENDED: (args) => User_1.UserRequests.recommended(args.count, args.cursor),
    USER_FOLLOW: (args) => User_1.UserRequests.follow(args.id),
    USER_FOLLOWING: (args) => User_1.UserRequests.following(args.id, args.count, args.cursor),
    USER_FOLLOWERS: (args) => User_1.UserRequests.followers(args.id, args.count, args.cursor),
    USER_HIGHLIGHTS: (args) => User_1.UserRequests.highlights(args.id, args.count, args.cursor),
    USER_LIKES: (args) => User_1.UserRequests.likes(args.id, args.count, args.cursor),
    USER_MEDIA: (args) => User_1.UserRequests.media(args.id, args.count, args.cursor),
    USER_NOTIFICATIONS: (args) => User_1.UserRequests.notifications(args.count, args.cursor),
    USER_SUBSCRIPTIONS: (args) => User_1.UserRequests.subscriptions(args.id, args.count, args.cursor),
    USER_TIMELINE: (args) => User_1.UserRequests.tweets(args.id, args.count, args.cursor),
    USER_TIMELINE_AND_REPLIES: (args) => User_1.UserRequests.tweetsAndReplies(args.id, args.count, args.cursor),
    USER_UNFOLLOW: (args) => User_1.UserRequests.unfollow(args.id),
    /* eslint-enable @typescript-eslint/naming-convention */
};
//# sourceMappingURL=Requests.js.map