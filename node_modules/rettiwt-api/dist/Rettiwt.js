"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rettiwt = void 0;
const RettiwtConfig_1 = require("./models/RettiwtConfig");
const ListService_1 = require("./services/public/ListService");
const TweetService_1 = require("./services/public/TweetService");
const UserService_1 = require("./services/public/UserService");
/**
 * The class for accessing Twitter API.
 *
 * The created Rettiwt instance can be configured by passing in a configuration object to the constructor.
 *
 * For details regarding the available configuration options, refer to {@link IRettiwtConfig}
 *
 * @example Creating a Rettiwt instance with 'guest' authentication:
 * ```
 * import { Rettiwt } from 'rettiwt-api';
 *
 * // Creating a new Rettiwt instance
 * const rettiwt = new Rettiwt();
 * ```
 *
 * @example Creating a Rettiwt instance with 'guest' authentication, using a pre-generated guest key:
 * ```
 * import { Rettiwt } from 'rettiwt-api';
 *
 * // Creating a new Rettiwt instance
 * const rettiwt = new Rettiwt({ guestKey: 'GUEST_KEY' });
 * ```
 *
 * @example Creating a Rettiwt instance with 'user' authentication:
 * ```
 * import { Rettiwt } from 'rettiwt-api';
 *
 * // Creating a new Rettiwt instance
 * const rettiwt = new Rettiwt({ apiKey: 'API_KEY' });
 * ```
 *
 * @example Creating a Rettiwt instance with 'user'authentication, along with enabling debug logs and using a proxy:
 * ```
 * import { Rettiwt } from 'rettiwt-api';
 *
 * // Creating a new Rettiwt instance
 * const rettiwt = new Rettiwt({ apiKey: 'API_KEY', logging: true, proxyUrl: 'URL_TO_PROXY_SERVER' });
 * ```
 *
 * @public
 */
class Rettiwt {
    /** The configuration for Rettiwt. */
    _config;
    /** The instance used to fetch data related to lists. */
    list;
    /** The instance used to fetch data related to tweets. */
    tweet;
    /** The instance used to fetch data related to users. */
    user;
    /**
     * Initializes a new Rettiwt instance using the given api key.
     *
     * @param config - The config object for configuring the Rettiwt instance.
     */
    constructor(config) {
        this._config = new RettiwtConfig_1.RettiwtConfig(config);
        this.list = new ListService_1.ListService(this._config);
        this.tweet = new TweetService_1.TweetService(this._config);
        this.user = new UserService_1.UserService(this._config);
    }
    /** Set the API key for the current instance. */
    set apiKey(apiKey) {
        this._config.apiKey = apiKey;
    }
    /** Set the custom headers for the current instance. */
    set headers(headers) {
        this._config.headers = headers;
    }
    /** Set the proxy URL for the current instance. */
    set proxyUrl(proxyUrl) {
        this._config.proxyUrl = proxyUrl;
    }
}
exports.Rettiwt = Rettiwt;
//# sourceMappingURL=Rettiwt.js.map