#! /usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = require("commander");
const List_1 = __importDefault(require("./commands/List"));
const Tweet_1 = __importDefault(require("./commands/Tweet"));
const User_1 = __importDefault(require("./commands/User"));
const Rettiwt_1 = require("./Rettiwt");
// Creating a new commandline program
const Program = (0, commander_1.createCommand)('rettiwt')
    .description('A CLI tool for accessing the Twitter API for free!')
    .passThroughOptions()
    .enablePositionalOptions();
// Adding options
Program.option('-k, --key <string>', 'The API key to use for authentication')
    .option('-l, --log', 'Enable logging to console')
    .option('-p, --proxy <string>', 'The URL to the proxy to use')
    .option('-t, --timeout <number>', 'The timout (in milli-seconds) to use for requests')
    .option('-r, --retries <number>', 'The maximum number of retries to use, a value of 5 combined with a delay of 1000 is recommended')
    .option('-d, --delay <number>', 'The delay in milliseconds to use in-between successive requests');
// Parsing the program to get supplied options
Program.parse();
// Initializing Rettiwt instance using the given options
const RettiwtInstance = new Rettiwt_1.Rettiwt({
    apiKey: process.env.API_KEY ?? Program.opts().key,
    logging: Program.opts().log ? true : false,
    proxyUrl: Program.opts().proxy,
    timeout: Program.opts().timeout ? Number(Program.opts().timeout) : undefined,
    maxRetries: Program.opts().retries,
    delay: Program.opts().delay,
});
// Adding sub-commands
Program.addCommand((0, List_1.default)(RettiwtInstance));
Program.addCommand((0, Tweet_1.default)(RettiwtInstance));
Program.addCommand((0, User_1.default)(RettiwtInstance));
// Finalizing the CLI
Program.parse();
//# sourceMappingURL=cli.js.map