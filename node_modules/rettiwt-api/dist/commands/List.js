"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = require("commander");
const CliUtils_1 = require("../helper/CliUtils");
/**
 * Creates a new 'list' command which uses the given Rettiwt instance.
 *
 * @param rettiwt - The Rettiwt instance to use.
 * @returns The created 'list' command.
 */
function createListCommand(rettiwt) {
    // Creating the 'list' command
    const list = (0, commander_1.createCommand)('list').description('Access resources releated to lists');
    // Members
    list.command('members')
        .description('Fetch the list of members of the given tweet list')
        .argument('<id>', 'The id of the tweet list')
        .argument('[count]', 'The number of members to fetch')
        .argument('[cursor]', 'The cursor to the batch of members to fetch')
        .action(async (id, count, cursor) => {
        try {
            const members = await rettiwt.list.members(id, count ? parseInt(count) : undefined, cursor);
            (0, CliUtils_1.output)(members);
        }
        catch (error) {
            (0, CliUtils_1.output)(error);
        }
    });
    // Tweets
    list.command('tweets')
        .description('Fetch the list of tweets in the tweet list with the given id')
        .argument('<id>', 'The id of the tweet list')
        .argument('[count]', 'The number of tweets to fetch')
        .argument('[cursor]', 'The cursor to the batch of tweets to fetch')
        .action(async (id, count, cursor) => {
        try {
            const tweets = await rettiwt.list.tweets(id, count ? parseInt(count) : undefined, cursor);
            (0, CliUtils_1.output)(tweets);
        }
        catch (error) {
            (0, CliUtils_1.output)(error);
        }
    });
    return list;
}
exports.default = createListCommand;
//# sourceMappingURL=List.js.map