"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplyVariable = exports.MediaEntityVariable = exports.MediaVariable = void 0;
/**
 * Media to be sent as payload.
 *
 * @internal
 */
class MediaVariable {
    /* eslint-disable @typescript-eslint/naming-convention */
    media_entities;
    possibly_sensitive;
    /* eslint-enable @typescript-eslint/naming-convention */
    /**
     * @param media - The list of NewTweetMedia objects specifying the media items to be sent in the Tweet.
     */
    constructor(media) {
        this.media_entities = media.map((item) => new MediaEntityVariable(item));
        this.possibly_sensitive = false;
    }
}
exports.MediaVariable = MediaVariable;
/**
 * Each media item in the media payload.
 *
 * @internal
 */
class MediaEntityVariable {
    /* eslint-disable @typescript-eslint/naming-convention */
    media_id;
    tagged_users;
    /* eslint-enable @typescript-eslint/naming-convention */
    /**
     * @param media - The NewTweetMedia object specifying the details of the media item to be included in the payload.
     */
    constructor(media) {
        this.media_id = media.id;
        this.tagged_users = media.tags ?? [];
    }
}
exports.MediaEntityVariable = MediaEntityVariable;
/**
 * Reply specific details to be sent in payload.
 *
 * @internal
 */
class ReplyVariable {
    /* eslint-disable @typescript-eslint/naming-convention */
    exclude_reply_user_ids;
    in_reply_to_tweet_id;
    /* eslint-enable @typescript-eslint/naming-convention */
    /**
     * @param replyTo - The id of the Tweet to which this Tweet is a reply.
     */
    constructor(replyTo) {
        this.in_reply_to_tweet_id = replyTo;
        this.exclude_reply_user_ids = [];
    }
}
exports.ReplyVariable = ReplyVariable;
//# sourceMappingURL=Variables.js.map