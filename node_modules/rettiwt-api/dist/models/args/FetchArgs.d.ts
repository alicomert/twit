import { TweetRepliesSortType } from '../../enums/Tweet';
import { IFetchArgs, ITweetFilter } from '../../types/args/FetchArgs';
/**
 * Options specifying the data that is to be fetched.
 *
 * @public
 */
export declare class FetchArgs implements IFetchArgs {
    count?: number;
    cursor?: string;
    filter?: TweetFilter;
    id?: string;
    ids?: string[];
    sortBy?: TweetRepliesSortType;
    /**
     * @param args - Additional user-defined arguments for fetching the resource.
     */
    constructor(args: IFetchArgs);
}
/**
 * The filter to be used for searching tweets.
 *
 * @public
 */
export declare class TweetFilter implements ITweetFilter {
    endDate?: Date;
    excludeWords?: string[];
    fromUsers?: string[];
    hashtags?: string[];
    includePhrase?: string;
    includeWords?: string[];
    language?: string;
    list?: string;
    maxId?: string;
    mentions?: string[];
    minLikes?: number;
    minReplies?: number;
    minRetweets?: number;
    onlyLinks?: boolean;
    onlyOriginal?: boolean;
    onlyReplies?: boolean;
    onlyText?: boolean;
    optionalWords?: string[];
    quoted?: string;
    sinceId?: string;
    startDate?: Date;
    toUsers?: string[];
    top?: boolean;
    /**
     * @param filter - The filter configuration.
     */
    constructor(filter: ITweetFilter);
    /**
     * Convert Date object to Twitter string representation.
     * eg - 2023-06-23_11:21:06_UTC
     *
     * @param date - The date object to convert.
     * @returns The Twitter string representation of the date.
     */
    private static _dateToTwitterString;
    /**
     * @returns The string representation of 'this' filter.
     */
    toString(): string;
}
