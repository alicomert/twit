"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadArgs = exports.NewTweetMedia = exports.NewTweet = exports.PostArgs = void 0;
/**
 * Options specifying the data that is to be posted.
 *
 * @public
 */
class PostArgs {
    id;
    tweet;
    upload;
    /**
     * @param resource - The resource to be posted.
     * @param args - Additional user-defined arguments for posting the resource.
     */
    constructor(args) {
        this.id = args.id;
        this.tweet = args.tweet ? new NewTweet(args.tweet) : undefined;
        this.upload = args.upload ? new UploadArgs(args.upload) : undefined;
    }
}
exports.PostArgs = PostArgs;
/**
 * Configuration for the new tweet to be posted.
 *
 * @public
 */
class NewTweet {
    media;
    quote;
    replyTo;
    scheduleFor;
    text;
    /**
     * @param newTweet - The args specifying the new tweet to be posted.
     */
    constructor(newTweet) {
        this.media = newTweet.media;
        this.quote = newTweet.quote;
        this.replyTo = newTweet.replyTo;
        this.scheduleFor = newTweet.scheduleFor;
        this.text = newTweet.text ?? '';
    }
}
exports.NewTweet = NewTweet;
/**
 * Configuration for the media to be uploaded.
 *
 * @public
 */
class NewTweetMedia {
    id;
    tags;
    /**
     * @param newTweetMedia - The args specifying the new media to be posted along with the tweet.
     */
    constructor(newTweetMedia) {
        this.id = newTweetMedia.id;
        this.tags = newTweetMedia.tags;
    }
}
exports.NewTweetMedia = NewTweetMedia;
/**
 * Options specifying the media file to be uploaded.
 *
 * @public
 */
class UploadArgs {
    id;
    media;
    size;
    /**
     * @param step - The upload step.
     * @param args - The upload arguments for uploading the media file.
     */
    constructor(args) {
        this.size = args.size;
        this.media = args.media;
        this.id = args.id;
    }
}
exports.UploadArgs = UploadArgs;
//# sourceMappingURL=PostArgs.js.map